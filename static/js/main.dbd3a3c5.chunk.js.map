{"version":3,"sources":["components/WorldData.tsx","components/CountriesDropdown.jsx","components/UserCountryData.tsx","components/Navbar.tsx","components/newsData.ts","components/NewsCarousel.jsx","pages/MainPage.tsx","pages/DataPage.tsx","pages/Error404.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["numberWithCommas","x","toString","replace","WorldData","state","loading","json","active","confirmed","deaths","recovered","new_deaths","new_confirmed","mortality","recovery","fetch","response","data","this","setState","className","Component","CountriesDropdown","country","url","handleChange","bind","e","tag","target","value","onChange","name","href","UserCountryData","ipjson","country_name","country_real_name","includes","matches","match","join","Navbar","alt","src","width","height","getNews","a","then","articles","NewsCarousel","useState","news","setNews","useEffect","Carousel","map","theArticle","Item","urlToImage","title","Caption","style","fontSize","d","Date","MainPage","getFullYear","myProps","props","queryString","parse","location","search","c","Error404","App","basename","exact","path","component","DataPage","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dbd3a3c5.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, { Component } from \"react\";\r\nimport \"../css/MainPage.css\";\r\n\r\nfunction numberWithCommas(x: any) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nclass WorldData extends Component {\r\n  state = {\r\n    loading: true,\r\n    json: {\r\n      active: \"\",\r\n      confirmed: \"\",\r\n      deaths: \"\",\r\n      recovered: \"\",\r\n      new_deaths: \"\",\r\n      new_confirmed: \"\",\r\n      mortality: \"\",\r\n      recovery: \"\",\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://az-covid-19-api.herokuapp.com/api?c=world\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({ json: data, loading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <br />\r\n        <h2 className=\"text-center\">Coronavirus Live Stats</h2>\r\n\r\n        <br />\r\n        <div className=\"confirmed center\">\r\n          <h2>Total Cases:</h2>\r\n          <h1 className=\"text-center\">\r\n            {numberWithCommas(this.state.json.confirmed)} (+\r\n            {numberWithCommas(this.state.json.new_confirmed)})\r\n          </h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"active center\">\r\n          <h3>Active Cases:</h3>\r\n          <h1 className=\"text-center\">\r\n            {numberWithCommas(this.state.json.active)}\r\n          </h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"deaths center\">\r\n          <h3>Total Deaths:</h3>\r\n          <h1 className=\"text-center\">\r\n            {numberWithCommas(this.state.json.deaths)} (+\r\n            {numberWithCommas(this.state.json.new_deaths)})\r\n          </h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"recoveredcenter\">\r\n          <h2>Recovered:</h2>\r\n          <h1 className=\"text-center\">\r\n            {numberWithCommas(this.state.json.recovered)}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorldData;\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, { Component } from \"react\";\r\nimport \"../css/MainPage.css\";\r\n\r\nclass CountriesDropdown extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { country: \"Afghanistan\", url: \"#/data?c=\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    let tag = e.target.value;\r\n\r\n    this.setState({ country: tag });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h3 className=\"text-center\">Get Live COVID-19 Data</h3>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            value={this.state.country}\r\n            onChange={this.handleChange}\r\n          >\r\n            <option value=\"Afganistan\">Afghanistan</option>\r\n            <option name=\"Albania\">Albania</option>\r\n            <option name=\"Algeria\">Algeria</option>\r\n            <option name=\"Andorra\">Andorra</option>\r\n            <option name=\"Angola\">Angola</option>\r\n            <option name=\"Anguilla\">Anguilla</option>\r\n            <option name=\"Antigua & Barbuda\">Antigua & Barbuda</option>\r\n            <option name=\"Argentina\">Argentina</option>\r\n            <option name=\"Armenia\">Armenia</option>\r\n            <option name=\"Aruba\">Aruba</option>\r\n            <option name=\"Australia\">Australia</option>\r\n            <option name=\"Austria\">Austria</option>\r\n            <option name=\"Azerbaijan\">Azerbaijan</option>\r\n            <option name=\"Bahamas\">Bahamas</option>\r\n            <option name=\"Bahrain\">Bahrain</option>\r\n            <option name=\"Bangladesh\">Bangladesh</option>\r\n            <option name=\"Barbados\">Barbados</option>\r\n            <option name=\"Belarus\">Belarus</option>\r\n            <option name=\"Belgium\">Belgium</option>\r\n            <option name=\"Belize\">Belize</option>\r\n            <option name=\"Benin\">Benin</option>\r\n            <option name=\"Bermuda\">Bermuda</option>\r\n            <option name=\"Bhutan\">Bhutan</option>\r\n            <option name=\"Bolivia\">Bolivia</option>\r\n            <option name=\"Bonaire\">Bonaire</option>\r\n            <option name=\"Bosnia & Herzegovina\">Bosnia & Herzegovina</option>\r\n            <option name=\"Botswana\">Botswana</option>\r\n            <option name=\"Brazil\">Brazil</option>\r\n            <option name=\"British Indian Ocean Ter\">\r\n              British Indian Ocean Ter\r\n            </option>\r\n            <option name=\"Brunei\">Brunei</option>\r\n            <option name=\"Bulgaria\">Bulgaria</option>\r\n            <option name=\"Burkina Faso\">Burkina Faso</option>\r\n            <option name=\"Burundi\">Burundi</option>\r\n            <option name=\"Cambodia\">Cambodia</option>\r\n            <option name=\"Cameroon\">Cameroon</option>\r\n            <option name=\"Canary Islands\">Canary Islands</option>\r\n            <option name=\"Cape Verde\">Cape Verde</option>\r\n            <option name=\"Car\">Central African Republic</option>\r\n            <option name=\"Chad\">Chad</option>\r\n            <option name=\"Channel Islands\">Channel Islands</option>\r\n            <option name=\"Chile\">Chile</option>\r\n            <option name=\"China\">China</option>\r\n            <option name=\"Cocos Island\">Cocos Island</option>\r\n            <option name=\"Colombia\">Colombia</option>\r\n            <option name=\"Comoros\">Comoros</option>\r\n            <option name=\"Congo\">Congo</option>\r\n            <option name=\"Costa Rica\">Costa Rica</option>\r\n            <option name=\"Croatia\">Croatia</option>\r\n            <option name=\"Cuba\">Cuba</option>\r\n            <option name=\"Curaco\">Curacao</option>\r\n            <option name=\"Cyprus\">Cyprus</option>\r\n            <option name=\"Czech\">Czech Republic</option>\r\n            <option name=\"Denmark\">Denmark</option>\r\n            <option name=\"Djibouti\">Djibouti</option>\r\n            <option name=\"Dominica\">Dominica</option>\r\n            <option name=\"Dominican Republic\">Dominican Republic</option>\r\n            <option name=\"East Timor\">East Timor</option>\r\n            <option name=\"Ecuador\">Ecuador</option>\r\n            <option name=\"Egypt\">Egypt</option>\r\n            <option name=\"El Salvador\">El Salvador</option>\r\n            <option name=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n            <option name=\"Eritrea\">Eritrea</option>\r\n            <option name=\"Estonia\">Estonia</option>\r\n            <option name=\"Ethiopia\">Ethiopia</option>\r\n            <option name=\"Fiji\">Fiji</option>\r\n            <option name=\"Finland\">Finland</option>\r\n            <option name=\"France\">France</option>\r\n            <option name=\"Gabon\">Gabon</option>\r\n            <option name=\"Gambia\">Gambia</option>\r\n            <option name=\"Georgia\">Georgia</option>\r\n            <option name=\"Germany\">Germany</option>\r\n            <option name=\"Ghana\">Ghana</option>\r\n            <option name=\"Gibraltar\">Gibraltar</option>\r\n            <option name=\"Greece\">Greece</option>\r\n            <option name=\"Greenland\">Greenland</option>\r\n            <option name=\"Grenada\">Grenada</option>\r\n            <option name=\"Guadeloupe\">Guadeloupe</option>\r\n            <option name=\"Guam\">Guam</option>\r\n            <option name=\"Guatemala\">Guatemala</option>\r\n            <option name=\"Guinea\">Guinea</option>\r\n            <option name=\"Guyana\">Guyana</option>\r\n            <option name=\"Haiti\">Haiti</option>\r\n            <option name=\"Hawaii\">Hawaii</option>\r\n            <option name=\"Honduras\">Honduras</option>\r\n            <option name=\"Hong Kong\">Hong Kong</option>\r\n            <option name=\"Hungary\">Hungary</option>\r\n            <option name=\"Iceland\">Iceland</option>\r\n            <option name=\"Indonesia\">Indonesia</option>\r\n            <option name=\"India\">India</option>\r\n            <option name=\"Iran\">Iran</option>\r\n            <option name=\"Iraq\">Iraq</option>\r\n            <option name=\"Ireland\">Ireland</option>\r\n            <option name=\"Israel\">Israel</option>\r\n            <option name=\"Italy\">Italy</option>\r\n            <option name=\"Jamaica\">Jamaica</option>\r\n            <option name=\"Japan\">Japan</option>\r\n            <option name=\"Jordan\">Jordan</option>\r\n            <option name=\"Kazakhstan\">Kazakhstan</option>\r\n            <option name=\"Kenya\">Kenya</option>\r\n            <option name=\"Kiribati\">Kiribati</option>\r\n            <option name=\"Korea North\">Korea North</option>\r\n            <option name=\"Korea Sout\">Korea South</option>\r\n            <option name=\"Kuwait\">Kuwait</option>\r\n            <option name=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n            <option name=\"Laos\">Laos</option>\r\n            <option name=\"Latvia\">Latvia</option>\r\n            <option name=\"Lebanon\">Lebanon</option>\r\n            <option name=\"Lesotho\">Lesotho</option>\r\n            <option name=\"Libya\">Libya</option>\r\n            <option name=\"Lithuania\">Lithuania</option>\r\n            <option name=\"Luxembourg\">Luxembourg</option>\r\n            <option name=\"Macau\">Macau</option>\r\n            <option name=\"Macedonia\">Macedonia</option>\r\n            <option name=\"Madagascar\">Madagascar</option>\r\n            <option name=\"Malaysia\">Malaysia</option>\r\n            <option name=\"Malawi\">Malawi</option>\r\n            <option name=\"Maldives\">Maldives</option>\r\n            <option name=\"Mali\">Mali</option>\r\n            <option name=\"Malta\">Malta</option>\r\n            <option name=\"Martinique\">Martinique</option>\r\n            <option name=\"Mauritania\">Mauritania</option>\r\n            <option name=\"Mauritius\">Mauritius</option>\r\n            <option name=\"Mayotte\">Mayotte</option>\r\n            <option name=\"Mexico\">Mexico</option>\r\n            <option name=\"Moldova\">Moldova</option>\r\n            <option name=\"Monaco\">Monaco</option>\r\n            <option name=\"Mongolia\">Mongolia</option>\r\n            <option name=\"Montserrat\">Montserrat</option>\r\n            <option name=\"Morocco\">Morocco</option>\r\n            <option name=\"Mozambique\">Mozambique</option>\r\n            <option name=\"Myanmar\">Myanmar</option>\r\n            <option name=\"Nepal\">Nepal</option>\r\n            <option name=\"Netherlands\">Netherlands</option>\r\n            <option name=\"New Caledonia\">New Caledonia</option>\r\n            <option name=\"New Zealand\">New Zealand</option>\r\n            <option name=\"Nicaragua\">Nicaragua</option>\r\n            <option name=\"Niger\">Niger</option>\r\n            <option name=\"Nigeria\">Nigeria</option>\r\n            <option name=\"Norway\">Norway</option>\r\n            <option name=\"Oman\">Oman</option>\r\n            <option name=\"Pakistan\">Pakistan</option>\r\n            <option name=\"Palestine\">Palestine</option>\r\n            <option name=\"Panama\">Panama</option>\r\n            <option name=\"Papua New Guinea\">Papua New Guinea</option>\r\n            <option name=\"Paraguay\">Paraguay</option>\r\n            <option name=\"Peru\">Peru</option>\r\n            <option name=\"Phillipines\">Philippines</option>\r\n            <option name=\"Poland\">Poland</option>\r\n            <option name=\"Portugal\">Portugal</option>\r\n            <option name=\"Qatar\">Qatar</option>\r\n            <option name=\"Montenegro\">Republic of Montenegro</option>\r\n            <option name=\"Serbia\">Republic of Serbia</option>\r\n            <option name=\"Reunion\">Reunion</option>\r\n            <option name=\"Romania\">Romania</option>\r\n            <option name=\"Russia\">Russia</option>\r\n            <option name=\"Rwanda\">Rwanda</option>\r\n            <option name=\"San Marino\">San Marino</option>\r\n            <option name=\"Saudi Arabia\">Saudi Arabia</option>\r\n            <option name=\"Senegal\">Senegal</option>\r\n            <option name=\"Seychelles\">Seychelles</option>\r\n            <option name=\"Sierra Leone\">Sierra Leone</option>\r\n            <option name=\"Singapore\">Singapore</option>\r\n            <option name=\"Slovakia\">Slovakia</option>\r\n            <option name=\"Slovenia\">Slovenia</option>\r\n            <option name=\"Somalia\">Somalia</option>\r\n            <option name=\"South Africa\">South Africa</option>\r\n            <option name=\"Spain\">Spain</option>\r\n            <option name=\"Sri Lanka\">Sri Lanka</option>\r\n            <option name=\"Sudan\">Sudan</option>\r\n            <option name=\"Suriname\">Suriname</option>\r\n            <option name=\"Swaziland\">Swaziland</option>\r\n            <option name=\"Sweden\">Sweden</option>\r\n            <option name=\"Switzerland\">Switzerland</option>\r\n            <option name=\"Syria\">Syria</option>\r\n            <option name=\"Tahiti\">Tahiti</option>\r\n            <option name=\"Taiwan\">Taiwan</option>\r\n            <option name=\"Tajikistan\">Tajikistan</option>\r\n            <option name=\"Tanzania\">Tanzania</option>\r\n            <option name=\"Thailand\">Thailand</option>\r\n            <option name=\"Togo\">Togo</option>\r\n            <option name=\"Tokelau\">Tokelau</option>\r\n            <option name=\"Tonga\">Tonga</option>\r\n            <option name=\"Tunisia\">Tunisia</option>\r\n            <option name=\"Turkey\">Turkey</option>\r\n            <option name=\"Turkmenistan\">Turkmenistan</option>\r\n            <option name=\"Tuvalu\">Tuvalu</option>\r\n            <option name=\"Uganda\">Uganda</option>\r\n            <option name=\"UK\">United Kingdom</option>\r\n            <option name=\"Ukraine\">Ukraine</option>\r\n            <option name=\"UAE\">United Arab Emirates</option>\r\n            <option name=\"USA\">United States</option>\r\n            <option name=\"Uraguay\">Uruguay</option>\r\n            <option name=\"Uzbekistan\">Uzbekistan</option>\r\n            <option name=\"Vanuatu\">Vanuatu</option>\r\n            <option name=\"Vatican City\">Vatican City State</option>\r\n            <option name=\"Venezuela\">Venezuela</option>\r\n            <option name=\"Vietnam\">Vietnam</option>\r\n            <option name=\"Yemen\">Yemen</option>\r\n            <option name=\"Zaire\">Zaire</option>\r\n            <option name=\"Zambia\">Zambia</option>\r\n            <option name=\"Zimbabwe\">Zimbabwe</option>\r\n          </select>\r\n          <br />\r\n        </div>\r\n        <button className=\"btn btn-outline-primary\">\r\n          <a href={this.state.url + this.state.country}>Get Data</a>\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountriesDropdown;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../css/MainPage.css\";\r\n\r\nfunction numberWithCommas(x: any) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nclass UserCountryData extends Component {\r\n  state = {\r\n    loading: true,\r\n    country: \"\",\r\n    json: {\r\n      active: \"\",\r\n      confirmed: \"\",\r\n      deaths: \"\",\r\n      recovered: \"\",\r\n      new_deaths: \"\",\r\n      new_confirmed: \"\",\r\n      mortality: \"\",\r\n      recovery: \"\",\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const ipjson = await (await fetch(\"https://ipapi.co/json\")).json();\r\n    let country_name: any = ipjson.country_name;\r\n    const country_real_name = ipjson.country_name;\r\n    const spaceCountry = [\r\n      \"United States\",\r\n      \"United Kingdom\",\r\n      \"United Arab Emirates\",\r\n    ];\r\n    if (spaceCountry.includes(country_name)) {\r\n      const matches: any = country_name.match(/\\b(\\w)/g);\r\n      country_name = matches.join(\"\");\r\n    }\r\n\r\n    const url = \"https://az-covid-19-api.herokuapp.com/api?c=\" + country_name;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({ json: data, country: country_real_name, loading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <h2 className=\"text-center\">\r\n          Coronavirus Stats for <b>{this.state.country}</b>\r\n        </h2>\r\n        <br />\r\n        <div className=\"confirmed-u\">\r\n          <h2>Total Cases:</h2>\r\n          <h1 className=\"text-center\">\r\n            {numberWithCommas(this.state.json.confirmed)} (+\r\n            {numberWithCommas(this.state.json.new_confirmed)})\r\n          </h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"active-u center\">\r\n          <h3>Active Cases:</h3>\r\n          <h1 className=\"text-center\">\r\n            {numberWithCommas(this.state.json.active)}\r\n          </h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"deaths-u center\">\r\n          <h3>Total Deaths:</h3>\r\n          <h1 className=\"text-center\">\r\n            {numberWithCommas(this.state.json.deaths)} (+\r\n            {numberWithCommas(this.state.json.new_deaths)})\r\n          </h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"recovered-u center\">\r\n          <h2>Recovered:</h2>\r\n          <h1 className=\"text-center\">\r\n            {numberWithCommas(this.state.json.recovered)}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserCountryData;\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, { Component } from \"react\";\r\nimport \"../css/MainPage.css\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <nav className=\"navbar navbar-light\">\r\n            <br />\r\n            <img alt=\"CoronaInfo\" src=\"./logo.PNG\" width=\"235\" height=\"45\" />\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","const getNews = async () => {\r\n  const url: string =\r\n    \"http://newsapi.org/v2/top-headlines?q=coronavirus&country=us&apiKey=2d93d262007248b18dbbf71961515d74\";\r\n  const response: any = await fetch(url).then((data) => data);\r\n  const data: any = await response.json();\r\n  return data.articles;\r\n};\r\n\r\nexport default getNews;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport getNews from \"./newsData\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../css/MainPage.css\";\r\n\r\nconst NewsCarousel = () => {\r\n  const [news, setNews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getNews().then((data) => data && setNews(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"newsdiv\">\r\n      <Carousel>\r\n        {news.map((theArticle) => (\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100 img-fluid\"\r\n              src={theArticle.urlToImage}\r\n              alt={theArticle.title}\r\n            />\r\n            <Carousel.Caption>\r\n              <h2 style={{ fontSize: 4 + \"vw\" }}>\r\n                <b>\r\n                  <a\r\n                    style={\r\n                      ({ textDecoration: \"none\" }, { color: \"#cfcfcf\" }, {})\r\n                    }\r\n                    href={theArticle.url}\r\n                  >\r\n                    {theArticle.title}\r\n                  </a>\r\n                </b>\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsCarousel;\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, { Component } from \"react\";\r\nimport WorldData from \"../components/WorldData\";\r\nimport \"../css/MainPage.css\";\r\nimport CountriesDropdown from \"../components/CountriesDropdown\";\r\nimport UserCountryData from \"../components/UserCountryData\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport NewsCarousel from \"../components/NewsCarousel.jsx\";\r\n\r\nconst d = new Date();\r\n\r\nclass MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <NewsCarousel />\r\n        <WorldData />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <UserCountryData />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <CountriesDropdown />\r\n\r\n        <p className=\"text-center\">Ⓒ K.M Ahnaf Zamil {d.getFullYear()}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, { Component } from \"react\";\r\nimport \"../css/MainPage.css\";\r\nimport queryString from \"query-string\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nfunction numberWithCommas(x: any) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nclass WorldData extends Component {\r\n  state = {\r\n    loading: true,\r\n    json: {\r\n      active: \"\",\r\n      confirmed: \"\",\r\n      deaths: \"\",\r\n      recovered: \"\",\r\n      new_deaths: \"\",\r\n      new_confirmed: \"\",\r\n      mortality: \"\",\r\n      recovery: \"\",\r\n    },\r\n    value: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const myProps: any = this.props;\r\n    const value = queryString.parse(myProps.location.search);\r\n    const url = \"https://az-covid-19-api.herokuapp.com/api?c=\" + value.c;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({ json: data, loading: false, value: value.c });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <br />\r\n        <h2 className=\"text-center\">\r\n          Coronavirus Live Stats for <b>{this.state.value}</b>\r\n        </h2>\r\n\r\n        <br />\r\n        <div className=\"confirmed center\">\r\n          <h2>Total Cases:</h2>\r\n          <h1>\r\n            {numberWithCommas(this.state.json.confirmed)} (+\r\n            {numberWithCommas(this.state.json.new_confirmed)})\r\n          </h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"active center\">\r\n          <h3>Active Cases:</h3>\r\n          <h1>{numberWithCommas(this.state.json.active)}</h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"deaths center\">\r\n          <h3>Total Deaths:</h3>\r\n          <h1>\r\n            {numberWithCommas(this.state.json.deaths)} (+\r\n            {numberWithCommas(this.state.json.new_deaths)})\r\n          </h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"recovered center\">\r\n          <h2>Recovered:</h2>\r\n          <h1>{numberWithCommas(this.state.json.recovered)}</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorldData;\r\n","import React, { Component } from 'react';\r\n\r\nclass Error404 extends Component{\r\n    render(){\r\n        return(\r\n            <h1>Whoops! Not Found</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error404;","import React, { Component } from \"react\";\nimport MainPage from \"./pages/MainPage\";\nimport DataPage from \"./pages/DataPage\";\nimport Error404 from \"./pages/Error404\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/\">\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/data\" component={DataPage} />\n          <Route component={Error404} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}